[build-system]
requires = ["flit_core >=3.11,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "benchmark_ctrs"
dynamic = ["version", "description"]
authors = [{ name = "Ali Ahmed", email = "rated.ali.7@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]
license = "MIT"
license-files = ["LICENSE"]
dependencies = [
    "typing-extensions",
    "torch==2.6.0",
    "torchvision==0.21.0",
    "lightning[pytorch-extra]",
    "torchmetrics",  
    "numpy",
    "scipy",
    "statsmodels",                              # required for logging with torch.util.tensorboard
]

[project.optional-dependencies]
dev = ["ruff"]
results = ["pandas", "tbparse"]

[project.urls]
Homepage = "https://github.com/ratedali/benchmark_ctrs"
Issues = "https://github.com/ratedali/benchmark_ctrs/issues"

[project.scripts]
benchmark-ctrs = "benchmark_ctrs.cli.__main__:main"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # isort
    "I",
    # pyupgrade
    "UP",
    # pydocstyle
    # "D",
    # pydoclint
    "DOC",
    # flake8-builtins
    "A",
    # flake8-annotations
    # "ANN",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-commas
    "COM",
    # flake8-future-annotations
    "FA",
    # flake8-boolean-trap
    "FBT",
    # flake8-fixme
    "FIX",
    # flake8-logging-format
    "G",
    # flake8-import-conventions
    "ICN",
    # flake8-no-pep420
    "INP",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-logging
    "LOG",
    # flake8-pie
    "PIE",
    # flake8-use-pathlib
    "PTH",
    # flake8-pyi
    "PYI",
    # flake8-quotes
    "Q",
    # flake8-return
    "RET",
    # flake8-raise
    "RSE",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # flake8-self
    "SLF",
    # flake8-slot
    "SLOT",
    # flake8-print
    "T20",
    # flake8-type-checking
    "TC",
    # flake8-tidy-imports 
    "TID",
    # Pylint
    "PLE",
    "PLW",
    "PLR",
    "PLC",
    # Ruff-specific rules
    "RUF",
    # tryceratops
    "TRY",
    # eradicate
    "ERA",
    # NumPy-specific rules
    "NPY",
    # Perflint
    "PERF",
    # refurb
    "FURB",
    # mccabe complexity
    "C90",
]
ignore = ["COM812", "TRY003", "PLR0913", "PLR1714"]
